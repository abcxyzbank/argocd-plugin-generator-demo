apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-sql
data:
  init.sql: |
    CREATE DATABASE organization;

    \c organization;

    CREATE TABLE organization (
        id SERIAL PRIMARY KEY,
        tenant VARCHAR(255) NOT NULL,
        status VARCHAR(50) CHECK (status IN ('active', 'de-provisioned', 'trial', 'inactive')) NOT NULL
    );

    INSERT INTO organization (tenant, status) VALUES
    ('acme-corp', 'active'),
    ('beta-solutions', 'de-provisioned'),
    ('gamma-industries', 'trial'),
    ('delta-technologies', 'inactive'),
    ('echo-innovations', 'active'),
    ('foxtrot-consulting', 'de-provisioned'),
    ('global-tech', 'trial'),
    ('horizon-enterprises', 'inactive'),
    ('innova-systems', 'active'),
    ('jupiter-networks', 'trial');
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM=  # base64 encoded value of 'postgres'
  POSTGRES_PASSWORD: bXlzZWNyZXRwYXNzd29yZA==  # base64 encoded value of 'mysecretpassword'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: init-sql
          configMap:
            name: postgres-init-sql

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
