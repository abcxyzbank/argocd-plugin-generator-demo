apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-generator-plugin
  labels:
    app: tenant-generator-plugin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenant-generator-plugin
  template:
    metadata:
      labels:
        app: tenant-generator-plugin
    spec:
      containers:
      - name: tenent-generator-plugin
        image: tanmaybhat/tenant-generator-plugin-demo:latest
        ports:
        - containerPort: 4355
        env:
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db_password
        - name: DB_HOST
          value: "postgres-service"  # This assumes you have a PostgreSQL service running in Kubernetes
        - name: DB_PORT
          value: "5432"
        - name: AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: 'plugin.auth.token'
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-generator-plugin
spec:
  type: ClusterIP
  selector:
    app: tenant-generator-plugin
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 4355
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  db_name: b3JnYW5pemF0aW9u
  db_user: cG9zdGdyZXM=
  db_password: bXlzZWNyZXRwYXNzd29yZA==
---
apiVersion: v1
kind: Secret
metadata:
  name: api-credentials
type: Opaque
data:
  plugin.auth.token: bXlzZWNyZXRwYXNzd29yZA==
---
apiVersion: v1
data:
  baseUrl: http://tenant-generator-plugin:8080
  token: $api-credentials:plugin.auth.token
kind: ConfigMap
metadata:
  name: tenant-generator-plugin
  namespace: argocd
  